function cov_i4kde1i8(){var path="C:\\Users\\65804\\dvops\\Project-part2\\utils\\DeleteStudentsUtils.js";var hash="3dbf011b341631722c59809af67d14e7d6c85a7b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\65804\\dvops\\Project-part2\\utils\\DeleteStudentsUtils.js",statementMap:{"0":{start:{line:68,column:4},end:{line:86,column:5}},"1":{start:{line:69,column:19},end:{line:69,column:32}},"2":{start:{line:70,column:28},end:{line:70,column:65}},"3":{start:{line:71,column:20},end:{line:71,column:22}},"4":{start:{line:72,column:8},end:{line:76,column:9}},"5":{start:{line:72,column:21},end:{line:72,column:22}},"6":{start:{line:73,column:33},end:{line:73,column:47}},"7":{start:{line:74,column:12},end:{line:75,column:26}},"8":{start:{line:75,column:16},end:{line:75,column:26}},"9":{start:{line:77,column:8},end:{line:83,column:9}},"10":{start:{line:78,column:12},end:{line:78,column:41}},"11":{start:{line:79,column:12},end:{line:79,column:91}},"12":{start:{line:80,column:12},end:{line:80,column:86}},"13":{start:{line:82,column:12},end:{line:82,column:90}},"14":{start:{line:85,column:8},end:{line:85,column:64}},"15":{start:{line:89,column:0},end:{line:92,column:2}}},fnMap:{"0":{name:"deleteStudent",decl:{start:{line:67,column:15},end:{line:67,column:28}},loc:{start:{line:67,column:39},end:{line:87,column:1}},line:67}},branchMap:{"0":{loc:{start:{line:74,column:12},end:{line:75,column:26}},type:"if",locations:[{start:{line:74,column:12},end:{line:75,column:26}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:74},"1":{loc:{start:{line:77,column:8},end:{line:83,column:9}},type:"if",locations:[{start:{line:77,column:8},end:{line:83,column:9}},{start:{line:81,column:15},end:{line:83,column:9}}],line:77}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},f:{"0":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"3dbf011b341631722c59809af67d14e7d6c85a7b"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_i4kde1i8=function(){return actualCoverage;};}return actualCoverage;}cov_i4kde1i8();/*const { Student } = require('../models/Student');
const fs = require('fs').promises;

async function readJSON(filename) {
    try {
        const data = await fs.readFile(filename, 'utf8');
        return JSON.parse(data);
    } catch (err) {
        console.error('Error reading file:', err);
        throw err;
    }
}

async function writeJSON(object, filename) {
    try {
        await fs.writeFile(filename, JSON.stringify(object, null, 2), 'utf8');
    } catch (err) {
        console.error('Error writing file:', err);
        throw err;
    }
}

async function deleteStudent(req, res) {
    try {
        const id = req.params.id;

        // Comprehensive ID validation
        if (!id || id.trim() === '') {
            return res.status(400).json({ message: 'Valid student ID is required' });
        }

        // Logging for tracking
        console.log(`Attempting to delete student with ID: ${id}`);

        const allStudents = await readJSON('utils/students.json');

        // Check if student list is empty
        if (allStudents.length === 0) {
            return res.status(404).json({ message: 'No students available to delete' });
        }

        const initialLength = allStudents.length;
        const filteredStudents = allStudents.filter(student => student.id !== id);

        // Check if student was actually deleted
        if (filteredStudents.length === initialLength) {
            return res.status(404).json({ message: 'Student not found' });
        }

        await writeJSON(filteredStudents, 'utils/students.json');

        return res.status(200).json({ 
            message: 'Student deleted successfully!', 
            remainingStudents: filteredStudents.length 
        });
    } catch (error) {
        console.error('Comprehensive delete student error:', error);
        return res.status(500).json({ 
            message: 'Server error during student deletion', 
            error: error.message 
        });
    }
}

module.exports = { deleteStudent, readJSON, writeJSON, Student };*/async function deleteStudent(req,res){cov_i4kde1i8().f[0]++;cov_i4kde1i8().s[0]++;try{const id=(cov_i4kde1i8().s[1]++,req.params.id);const allStudents=(cov_i4kde1i8().s[2]++,await readJSON('utils/students.json'));var index=(cov_i4kde1i8().s[3]++,-1);cov_i4kde1i8().s[4]++;for(var i=(cov_i4kde1i8().s[5]++,0);i<allStudents.length;i++){var currentStudent=(cov_i4kde1i8().s[6]++,allStudents[i]);cov_i4kde1i8().s[7]++;if(currentStudent.id==id){cov_i4kde1i8().b[0][0]++;cov_i4kde1i8().s[8]++;index=i;}else{cov_i4kde1i8().b[0][1]++;}}cov_i4kde1i8().s[9]++;if(index!=-1){cov_i4kde1i8().b[1][0]++;cov_i4kde1i8().s[10]++;allStudents.splice(index,1);cov_i4kde1i8().s[11]++;await fs.writeFile('utils/students.json',JSON.stringify(allStudents),'utf8');cov_i4kde1i8().s[12]++;return res.status(201).json({message:'Student deleted successfully!'});}else{cov_i4kde1i8().b[1][1]++;cov_i4kde1i8().s[13]++;return res.status(500).json({message:'Error occurred, unable to delete!'});}}catch(error){cov_i4kde1i8().s[14]++;return res.status(500).json({message:error.message});}}cov_i4kde1i8().s[15]++;module.exports={deleteStudent};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfaTRrZGUxaTgiLCJhY3R1YWxDb3ZlcmFnZSIsImRlbGV0ZVN0dWRlbnQiLCJyZXEiLCJyZXMiLCJmIiwicyIsImlkIiwicGFyYW1zIiwiYWxsU3R1ZGVudHMiLCJyZWFkSlNPTiIsImluZGV4IiwiaSIsImxlbmd0aCIsImN1cnJlbnRTdHVkZW50IiwiYiIsInNwbGljZSIsImZzIiwid3JpdGVGaWxlIiwiSlNPTiIsInN0cmluZ2lmeSIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwiZXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiRGVsZXRlU3R1ZGVudHNVdGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKmNvbnN0IHsgU3R1ZGVudCB9ID0gcmVxdWlyZSgnLi4vbW9kZWxzL1N0dWRlbnQnKTtcclxuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpLnByb21pc2VzO1xyXG5cclxuYXN5bmMgZnVuY3Rpb24gcmVhZEpTT04oZmlsZW5hbWUpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IGZzLnJlYWRGaWxlKGZpbGVuYW1lLCAndXRmOCcpO1xyXG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKGRhdGEpO1xyXG4gICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgcmVhZGluZyBmaWxlOicsIGVycik7XHJcbiAgICAgICAgdGhyb3cgZXJyO1xyXG4gICAgfVxyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiB3cml0ZUpTT04ob2JqZWN0LCBmaWxlbmFtZSkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBhd2FpdCBmcy53cml0ZUZpbGUoZmlsZW5hbWUsIEpTT04uc3RyaW5naWZ5KG9iamVjdCwgbnVsbCwgMiksICd1dGY4Jyk7XHJcbiAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciB3cml0aW5nIGZpbGU6JywgZXJyKTtcclxuICAgICAgICB0aHJvdyBlcnI7XHJcbiAgICB9XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGRlbGV0ZVN0dWRlbnQocmVxLCByZXMpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgaWQgPSByZXEucGFyYW1zLmlkO1xyXG5cclxuICAgICAgICAvLyBDb21wcmVoZW5zaXZlIElEIHZhbGlkYXRpb25cclxuICAgICAgICBpZiAoIWlkIHx8IGlkLnRyaW0oKSA9PT0gJycpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgbWVzc2FnZTogJ1ZhbGlkIHN0dWRlbnQgSUQgaXMgcmVxdWlyZWQnIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gTG9nZ2luZyBmb3IgdHJhY2tpbmdcclxuICAgICAgICBjb25zb2xlLmxvZyhgQXR0ZW1wdGluZyB0byBkZWxldGUgc3R1ZGVudCB3aXRoIElEOiAke2lkfWApO1xyXG5cclxuICAgICAgICBjb25zdCBhbGxTdHVkZW50cyA9IGF3YWl0IHJlYWRKU09OKCd1dGlscy9zdHVkZW50cy5qc29uJyk7XHJcblxyXG4gICAgICAgIC8vIENoZWNrIGlmIHN0dWRlbnQgbGlzdCBpcyBlbXB0eVxyXG4gICAgICAgIGlmIChhbGxTdHVkZW50cy5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5qc29uKHsgbWVzc2FnZTogJ05vIHN0dWRlbnRzIGF2YWlsYWJsZSB0byBkZWxldGUnIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgaW5pdGlhbExlbmd0aCA9IGFsbFN0dWRlbnRzLmxlbmd0aDtcclxuICAgICAgICBjb25zdCBmaWx0ZXJlZFN0dWRlbnRzID0gYWxsU3R1ZGVudHMuZmlsdGVyKHN0dWRlbnQgPT4gc3R1ZGVudC5pZCAhPT0gaWQpO1xyXG5cclxuICAgICAgICAvLyBDaGVjayBpZiBzdHVkZW50IHdhcyBhY3R1YWxseSBkZWxldGVkXHJcbiAgICAgICAgaWYgKGZpbHRlcmVkU3R1ZGVudHMubGVuZ3RoID09PSBpbml0aWFsTGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuanNvbih7IG1lc3NhZ2U6ICdTdHVkZW50IG5vdCBmb3VuZCcgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBhd2FpdCB3cml0ZUpTT04oZmlsdGVyZWRTdHVkZW50cywgJ3V0aWxzL3N0dWRlbnRzLmpzb24nKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgXHJcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdTdHVkZW50IGRlbGV0ZWQgc3VjY2Vzc2Z1bGx5IScsIFxyXG4gICAgICAgICAgICByZW1haW5pbmdTdHVkZW50czogZmlsdGVyZWRTdHVkZW50cy5sZW5ndGggXHJcbiAgICAgICAgfSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0NvbXByZWhlbnNpdmUgZGVsZXRlIHN0dWRlbnQgZXJyb3I6JywgZXJyb3IpO1xyXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IFxyXG4gICAgICAgICAgICBtZXNzYWdlOiAnU2VydmVyIGVycm9yIGR1cmluZyBzdHVkZW50IGRlbGV0aW9uJywgXHJcbiAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlIFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHsgZGVsZXRlU3R1ZGVudCwgcmVhZEpTT04sIHdyaXRlSlNPTiwgU3R1ZGVudCB9OyovXHJcblxyXG5hc3luYyBmdW5jdGlvbiBkZWxldGVTdHVkZW50KHJlcSwgcmVzKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGlkID0gcmVxLnBhcmFtcy5pZDtcclxuICAgICAgICBjb25zdCBhbGxTdHVkZW50cyA9IGF3YWl0IHJlYWRKU09OKCd1dGlscy9zdHVkZW50cy5qc29uJyk7XHJcbiAgICAgICAgdmFyIGluZGV4ID0gLTE7XHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhbGxTdHVkZW50cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICB2YXIgY3VycmVudFN0dWRlbnQgPSBhbGxTdHVkZW50c1tpXTtcclxuICAgICAgICAgICAgaWYgKGN1cnJlbnRTdHVkZW50LmlkID09IGlkKVxyXG4gICAgICAgICAgICAgICAgaW5kZXggPSBpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaW5kZXggIT0gLTEpIHtcclxuICAgICAgICAgICAgYWxsU3R1ZGVudHMuc3BsaWNlKGluZGV4LCAxKTtcclxuICAgICAgICAgICAgYXdhaXQgZnMud3JpdGVGaWxlKCd1dGlscy9zdHVkZW50cy5qc29uJywgSlNPTi5zdHJpbmdpZnkoYWxsU3R1ZGVudHMpLCAndXRmOCcpO1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDEpLmpzb24oeyBtZXNzYWdlOiAnU3R1ZGVudCBkZWxldGVkIHN1Y2Nlc3NmdWxseSEnIH0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IG1lc3NhZ2U6ICdFcnJvciBvY2N1cnJlZCwgdW5hYmxlIHRvIGRlbGV0ZSEnIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbWVzc2FnZTogZXJyb3IubWVzc2FnZSB9KTtcclxuICAgIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgICBkZWxldGVTdHVkZW50XHJcblxyXG59OyJdLCJtYXBwaW5ncyI6ImlxRUFlWTtBQUFBQSxZQUFBLFNBQUFBLENBQUEsU0FBQUMsY0FBQSxXQUFBQSxjQUFBLEVBQUFELFlBQUEsR0FmWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1FQUVBLGNBQWUsQ0FBQUUsYUFBYUEsQ0FBQ0MsR0FBRyxDQUFFQyxHQUFHLENBQUUsQ0FBQUosWUFBQSxHQUFBSyxDQUFBLE1BQUFMLFlBQUEsR0FBQU0sQ0FBQSxNQUNuQyxHQUFJLENBQ0EsS0FBTSxDQUFBQyxFQUFFLEVBQUFQLFlBQUEsR0FBQU0sQ0FBQSxNQUFHSCxHQUFHLENBQUNLLE1BQU0sQ0FBQ0QsRUFBRSxFQUN4QixLQUFNLENBQUFFLFdBQVcsRUFBQVQsWUFBQSxHQUFBTSxDQUFBLE1BQUcsS0FBTSxDQUFBSSxRQUFRLENBQUMscUJBQXFCLENBQUMsRUFDekQsR0FBSSxDQUFBQyxLQUFLLEVBQUFYLFlBQUEsR0FBQU0sQ0FBQSxNQUFHLENBQUMsQ0FBQyxFQUFDTixZQUFBLEdBQUFNLENBQUEsTUFDZixJQUFLLEdBQUksQ0FBQU0sQ0FBQyxFQUFBWixZQUFBLEdBQUFNLENBQUEsTUFBRyxDQUFDLEVBQUVNLENBQUMsQ0FBR0gsV0FBVyxDQUFDSSxNQUFNLENBQUVELENBQUMsRUFBRSxDQUFFLENBQ3pDLEdBQUksQ0FBQUUsY0FBYyxFQUFBZCxZQUFBLEdBQUFNLENBQUEsTUFBR0csV0FBVyxDQUFDRyxDQUFDLENBQUMsRUFBQ1osWUFBQSxHQUFBTSxDQUFBLE1BQ3BDLEdBQUlRLGNBQWMsQ0FBQ1AsRUFBRSxFQUFJQSxFQUFFLENBQ3ZCLENBQUFQLFlBQUEsR0FBQWUsQ0FBQSxTQUFBZixZQUFBLEdBQUFNLENBQUEsTUFBQUssS0FBSyxDQUFHQyxDQUFDLEVBQUMsS0FBQVosWUFBQSxHQUFBZSxDQUFBLFVBQ2xCLENBQUNmLFlBQUEsR0FBQU0sQ0FBQSxNQUNELEdBQUlLLEtBQUssRUFBSSxDQUFDLENBQUMsQ0FBRSxDQUFBWCxZQUFBLEdBQUFlLENBQUEsU0FBQWYsWUFBQSxHQUFBTSxDQUFBLE9BQ2JHLFdBQVcsQ0FBQ08sTUFBTSxDQUFDTCxLQUFLLENBQUUsQ0FBQyxDQUFDLENBQUNYLFlBQUEsR0FBQU0sQ0FBQSxPQUM3QixLQUFNLENBQUFXLEVBQUUsQ0FBQ0MsU0FBUyxDQUFDLHFCQUFxQixDQUFFQyxJQUFJLENBQUNDLFNBQVMsQ0FBQ1gsV0FBVyxDQUFDLENBQUUsTUFBTSxDQUFDLENBQUNULFlBQUEsR0FBQU0sQ0FBQSxPQUMvRSxNQUFPLENBQUFGLEdBQUcsQ0FBQ2lCLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLENBQUVDLE9BQU8sQ0FBRSwrQkFBZ0MsQ0FBQyxDQUFDLENBQzdFLENBQUMsSUFBTSxDQUFBdkIsWUFBQSxHQUFBZSxDQUFBLFNBQUFmLFlBQUEsR0FBQU0sQ0FBQSxPQUNILE1BQU8sQ0FBQUYsR0FBRyxDQUFDaUIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDQyxJQUFJLENBQUMsQ0FBRUMsT0FBTyxDQUFFLG1DQUFvQyxDQUFDLENBQUMsQ0FDakYsQ0FDSixDQUFFLE1BQU9DLEtBQUssQ0FBRSxDQUFBeEIsWUFBQSxHQUFBTSxDQUFBLE9BQ1osTUFBTyxDQUFBRixHQUFHLENBQUNpQixNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQyxDQUFFQyxPQUFPLENBQUVDLEtBQUssQ0FBQ0QsT0FBUSxDQUFDLENBQUMsQ0FDM0QsQ0FDSixDQUFDdkIsWUFBQSxHQUFBTSxDQUFBLE9BRURtQixNQUFNLENBQUNDLE9BQU8sQ0FBRyxDQUNieEIsYUFFSixDQUFDIiwiaWdub3JlTGlzdCI6W119