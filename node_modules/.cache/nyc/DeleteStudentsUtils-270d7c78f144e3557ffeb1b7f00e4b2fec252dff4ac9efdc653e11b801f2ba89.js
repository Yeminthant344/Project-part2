function cov_i4kde1i8(){var path="C:\\Users\\65804\\dvops\\Project-part2\\utils\\DeleteStudentsUtils.js";var hash="2952223dcfb8b8ef8c2d84a465d1806d6d5e9dc0";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\65804\\dvops\\Project-part2\\utils\\DeleteStudentsUtils.js",statementMap:{"0":{start:{line:68,column:4},end:{line:86,column:5}},"1":{start:{line:69,column:19},end:{line:69,column:32}},"2":{start:{line:70,column:28},end:{line:70,column:65}},"3":{start:{line:71,column:20},end:{line:71,column:22}},"4":{start:{line:72,column:8},end:{line:76,column:9}},"5":{start:{line:72,column:21},end:{line:72,column:22}},"6":{start:{line:73,column:33},end:{line:73,column:47}},"7":{start:{line:74,column:12},end:{line:75,column:26}},"8":{start:{line:75,column:16},end:{line:75,column:26}},"9":{start:{line:77,column:8},end:{line:83,column:9}},"10":{start:{line:78,column:12},end:{line:78,column:41}},"11":{start:{line:79,column:12},end:{line:79,column:91}},"12":{start:{line:80,column:12},end:{line:80,column:86}},"13":{start:{line:82,column:12},end:{line:82,column:90}},"14":{start:{line:85,column:8},end:{line:85,column:64}}},fnMap:{"0":{name:"deleteStudent",decl:{start:{line:67,column:15},end:{line:67,column:28}},loc:{start:{line:67,column:39},end:{line:87,column:1}},line:67}},branchMap:{"0":{loc:{start:{line:74,column:12},end:{line:75,column:26}},type:"if",locations:[{start:{line:74,column:12},end:{line:75,column:26}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:74},"1":{loc:{start:{line:77,column:8},end:{line:83,column:9}},type:"if",locations:[{start:{line:77,column:8},end:{line:83,column:9}},{start:{line:81,column:15},end:{line:83,column:9}}],line:77}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},f:{"0":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"2952223dcfb8b8ef8c2d84a465d1806d6d5e9dc0"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_i4kde1i8=function(){return actualCoverage;};}return actualCoverage;}cov_i4kde1i8();/*const { Student } = require('../models/Student');
const fs = require('fs').promises;

async function readJSON(filename) {
    try {
        const data = await fs.readFile(filename, 'utf8');
        return JSON.parse(data);
    } catch (err) {
        console.error('Error reading file:', err);
        throw err;
    }
}

async function writeJSON(object, filename) {
    try {
        await fs.writeFile(filename, JSON.stringify(object, null, 2), 'utf8');
    } catch (err) {
        console.error('Error writing file:', err);
        throw err;
    }
}

async function deleteStudent(req, res) {
    try {
        const id = req.params.id;

        // Comprehensive ID validation
        if (!id || id.trim() === '') {
            return res.status(400).json({ message: 'Valid student ID is required' });
        }

        // Logging for tracking
        console.log(`Attempting to delete student with ID: ${id}`);

        const allStudents = await readJSON('utils/students.json');

        // Check if student list is empty
        if (allStudents.length === 0) {
            return res.status(404).json({ message: 'No students available to delete' });
        }

        const initialLength = allStudents.length;
        const filteredStudents = allStudents.filter(student => student.id !== id);

        // Check if student was actually deleted
        if (filteredStudents.length === initialLength) {
            return res.status(404).json({ message: 'Student not found' });
        }

        await writeJSON(filteredStudents, 'utils/students.json');

        return res.status(200).json({ 
            message: 'Student deleted successfully!', 
            remainingStudents: filteredStudents.length 
        });
    } catch (error) {
        console.error('Comprehensive delete student error:', error);
        return res.status(500).json({ 
            message: 'Server error during student deletion', 
            error: error.message 
        });
    }
}

module.exports = { deleteStudent, readJSON, writeJSON, Student };*/async function deleteStudent(req,res){cov_i4kde1i8().f[0]++;cov_i4kde1i8().s[0]++;try{const id=(cov_i4kde1i8().s[1]++,req.params.id);const allStudents=(cov_i4kde1i8().s[2]++,await readJSON('utils/students.json'));var index=(cov_i4kde1i8().s[3]++,-1);cov_i4kde1i8().s[4]++;for(var i=(cov_i4kde1i8().s[5]++,0);i<allStudents.length;i++){var currentStudent=(cov_i4kde1i8().s[6]++,allStudents[i]);cov_i4kde1i8().s[7]++;if(currentStudent.id==id){cov_i4kde1i8().b[0][0]++;cov_i4kde1i8().s[8]++;index=i;}else{cov_i4kde1i8().b[0][1]++;}}cov_i4kde1i8().s[9]++;if(index!=-1){cov_i4kde1i8().b[1][0]++;cov_i4kde1i8().s[10]++;allStudents.splice(index,1);cov_i4kde1i8().s[11]++;await fs.writeFile('utils/students.json',JSON.stringify(allStudents),'utf8');cov_i4kde1i8().s[12]++;return res.status(201).json({message:'Student deleted successfully!'});}else{cov_i4kde1i8().b[1][1]++;cov_i4kde1i8().s[13]++;return res.status(500).json({message:'Error occurred, unable to delete!'});}}catch(error){cov_i4kde1i8().s[14]++;return res.status(500).json({message:error.message});}}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfaTRrZGUxaTgiLCJhY3R1YWxDb3ZlcmFnZSIsImRlbGV0ZVN0dWRlbnQiLCJyZXEiLCJyZXMiLCJmIiwicyIsImlkIiwicGFyYW1zIiwiYWxsU3R1ZGVudHMiLCJyZWFkSlNPTiIsImluZGV4IiwiaSIsImxlbmd0aCIsImN1cnJlbnRTdHVkZW50IiwiYiIsInNwbGljZSIsImZzIiwid3JpdGVGaWxlIiwiSlNPTiIsInN0cmluZ2lmeSIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwiZXJyb3IiXSwic291cmNlcyI6WyJEZWxldGVTdHVkZW50c1V0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qY29uc3QgeyBTdHVkZW50IH0gPSByZXF1aXJlKCcuLi9tb2RlbHMvU3R1ZGVudCcpO1xyXG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJykucHJvbWlzZXM7XHJcblxyXG5hc3luYyBmdW5jdGlvbiByZWFkSlNPTihmaWxlbmFtZSkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgZnMucmVhZEZpbGUoZmlsZW5hbWUsICd1dGY4Jyk7XHJcbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UoZGF0YSk7XHJcbiAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciByZWFkaW5nIGZpbGU6JywgZXJyKTtcclxuICAgICAgICB0aHJvdyBlcnI7XHJcbiAgICB9XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIHdyaXRlSlNPTihvYmplY3QsIGZpbGVuYW1lKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGF3YWl0IGZzLndyaXRlRmlsZShmaWxlbmFtZSwgSlNPTi5zdHJpbmdpZnkob2JqZWN0LCBudWxsLCAyKSwgJ3V0ZjgnKTtcclxuICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHdyaXRpbmcgZmlsZTonLCBlcnIpO1xyXG4gICAgICAgIHRocm93IGVycjtcclxuICAgIH1cclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gZGVsZXRlU3R1ZGVudChyZXEsIHJlcykge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBpZCA9IHJlcS5wYXJhbXMuaWQ7XHJcblxyXG4gICAgICAgIC8vIENvbXByZWhlbnNpdmUgSUQgdmFsaWRhdGlvblxyXG4gICAgICAgIGlmICghaWQgfHwgaWQudHJpbSgpID09PSAnJykge1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBtZXNzYWdlOiAnVmFsaWQgc3R1ZGVudCBJRCBpcyByZXF1aXJlZCcgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBMb2dnaW5nIGZvciB0cmFja2luZ1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGBBdHRlbXB0aW5nIHRvIGRlbGV0ZSBzdHVkZW50IHdpdGggSUQ6ICR7aWR9YCk7XHJcblxyXG4gICAgICAgIGNvbnN0IGFsbFN0dWRlbnRzID0gYXdhaXQgcmVhZEpTT04oJ3V0aWxzL3N0dWRlbnRzLmpzb24nKTtcclxuXHJcbiAgICAgICAgLy8gQ2hlY2sgaWYgc3R1ZGVudCBsaXN0IGlzIGVtcHR5XHJcbiAgICAgICAgaWYgKGFsbFN0dWRlbnRzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDQpLmpzb24oeyBtZXNzYWdlOiAnTm8gc3R1ZGVudHMgYXZhaWxhYmxlIHRvIGRlbGV0ZScgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBpbml0aWFsTGVuZ3RoID0gYWxsU3R1ZGVudHMubGVuZ3RoO1xyXG4gICAgICAgIGNvbnN0IGZpbHRlcmVkU3R1ZGVudHMgPSBhbGxTdHVkZW50cy5maWx0ZXIoc3R1ZGVudCA9PiBzdHVkZW50LmlkICE9PSBpZCk7XHJcblxyXG4gICAgICAgIC8vIENoZWNrIGlmIHN0dWRlbnQgd2FzIGFjdHVhbGx5IGRlbGV0ZWRcclxuICAgICAgICBpZiAoZmlsdGVyZWRTdHVkZW50cy5sZW5ndGggPT09IGluaXRpYWxMZW5ndGgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5qc29uKHsgbWVzc2FnZTogJ1N0dWRlbnQgbm90IGZvdW5kJyB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGF3YWl0IHdyaXRlSlNPTihmaWx0ZXJlZFN0dWRlbnRzLCAndXRpbHMvc3R1ZGVudHMuanNvbicpO1xyXG5cclxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oeyBcclxuICAgICAgICAgICAgbWVzc2FnZTogJ1N0dWRlbnQgZGVsZXRlZCBzdWNjZXNzZnVsbHkhJywgXHJcbiAgICAgICAgICAgIHJlbWFpbmluZ1N0dWRlbnRzOiBmaWx0ZXJlZFN0dWRlbnRzLmxlbmd0aCBcclxuICAgICAgICB9KTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcignQ29tcHJlaGVuc2l2ZSBkZWxldGUgc3R1ZGVudCBlcnJvcjonLCBlcnJvcik7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgXHJcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdTZXJ2ZXIgZXJyb3IgZHVyaW5nIHN0dWRlbnQgZGVsZXRpb24nLCBcclxuICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UgXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0geyBkZWxldGVTdHVkZW50LCByZWFkSlNPTiwgd3JpdGVKU09OLCBTdHVkZW50IH07Ki9cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGRlbGV0ZVN0dWRlbnQocmVxLCByZXMpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgaWQgPSByZXEucGFyYW1zLmlkO1xyXG4gICAgICAgIGNvbnN0IGFsbFN0dWRlbnRzID0gYXdhaXQgcmVhZEpTT04oJ3V0aWxzL3N0dWRlbnRzLmpzb24nKTtcclxuICAgICAgICB2YXIgaW5kZXggPSAtMTtcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFsbFN0dWRlbnRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHZhciBjdXJyZW50U3R1ZGVudCA9IGFsbFN0dWRlbnRzW2ldO1xyXG4gICAgICAgICAgICBpZiAoY3VycmVudFN0dWRlbnQuaWQgPT0gaWQpXHJcbiAgICAgICAgICAgICAgICBpbmRleCA9IGk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChpbmRleCAhPSAtMSkge1xyXG4gICAgICAgICAgICBhbGxTdHVkZW50cy5zcGxpY2UoaW5kZXgsIDEpO1xyXG4gICAgICAgICAgICBhd2FpdCBmcy53cml0ZUZpbGUoJ3V0aWxzL3N0dWRlbnRzLmpzb24nLCBKU09OLnN0cmluZ2lmeShhbGxTdHVkZW50cyksICd1dGY4Jyk7XHJcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMSkuanNvbih7IG1lc3NhZ2U6ICdTdHVkZW50IGRlbGV0ZWQgc3VjY2Vzc2Z1bGx5IScgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbWVzc2FnZTogJ0Vycm9yIG9jY3VycmVkLCB1bmFibGUgdG8gZGVsZXRlIScgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiBlcnJvci5tZXNzYWdlIH0pO1xyXG4gICAgfVxyXG59Il0sIm1hcHBpbmdzIjoibW1FQWVZO0FBQUFBLFlBQUEsU0FBQUEsQ0FBQSxTQUFBQyxjQUFBLFdBQUFBLGNBQUEsRUFBQUQsWUFBQSxHQWZaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7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